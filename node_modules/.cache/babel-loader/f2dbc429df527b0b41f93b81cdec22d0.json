{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOUL\\\\Desktop\\\\tz\\\\second\\\\src\\\\components\\\\AppRouter.jsx\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { authRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: authRoutes.map(({\n      path,\n      Component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: Component,\n      exacy: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/SOUL/Desktop/tz/second/src/components/AppRouter.jsx"],"names":["React","Switch","Route","Redirect","authRoutes","AppRouter","isAuth","map","path","Component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAsBC,QAAtB,QAAqC,kBAArC;AACA,SAAQC,UAAR,QAAyB,WAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAG,KAAf;AACA,sBACI,QAAC,MAAD;AAAA,cACKF,UAAU,CAACG,GAAX,CAAe,CAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAD,kBACR,QAAC,KAAD;AAAkB,MAAA,IAAI,EAAED,IAAxB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAoD,MAAA,KAAK;AAAzD,OAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,YADP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CATD;;KAAMH,S;AAWN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport {Switch, Route,Redirect} from \"react-router-dom\";\r\nimport {authRoutes} from \"../routes\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = false;\r\n    return (\r\n        <Switch>\r\n            {authRoutes.map(({path, Component}) =>\r\n                    <Route key={path} path={path} component={Component} exacy/>\r\n                )}\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}