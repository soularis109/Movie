{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOUL\\\\Desktop\\\\tz\\\\second\\\\src\\\\components\\\\NavBar\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './pages.css';\nimport axios from \"axios\";\nimport { setCurrentPage, setMovies } from \"../redux/films-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  portionSize = 10\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const totalCount = useSelector(state => state.movies.totalCount);\n  const pageSize = useSelector(state => state.movies.pageSize);\n  const currentPage = useSelector(state => state.movies.currentPage);\n  const pagesCount = Math.ceil(totalCount / pageSize);\n  const pages = [];\n\n  for (let i = 0; i <= pagesCount; i++) {\n    pages.push(i + 1);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  const onPages = pageNumber => {\n    dispatch(setCurrentPage(pageNumber));\n    axios.get(`https://yts.mx/api/v2/list_movies.json?limit=10&page=${pageNumber}&movie_count=${totalCount}`).then(response => {\n      dispatch(setMovies(response.data.data.movies));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 39\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === p && 'pages',\n        onClick: e => {\n          onPages(p);\n        },\n        children: p\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Pagination, \"6TzEMri1zCqOC1aMy6UW3FJlu+s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/SOUL/Desktop/tz/second/src/components/NavBar/Pagination.jsx"],"names":["React","useState","useDispatch","useSelector","axios","setCurrentPage","setMovies","Pagination","portionSize","dispatch","totalCount","state","movies","pageSize","currentPage","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onPages","pageNumber","get","then","response","data","filter","p","map","e"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './pages.css'\r\nimport axios from \"axios\";\r\nimport {setCurrentPage, setMovies} from \"../redux/films-reducer\";\r\nconst Pagination = ({portionSize = 10}) => {\r\n    const dispatch = useDispatch();\r\n    const totalCount = useSelector(state => state.movies.totalCount);\r\n    const pageSize = useSelector(state => state.movies.pageSize);\r\n    const currentPage = useSelector(state => state.movies.currentPage);\r\n\r\n    const pagesCount = Math.ceil(totalCount / pageSize)\r\n    const pages = [];\r\n\r\n    for (let i = 0; i <= pagesCount; i++) {\r\n        pages.push(i + 1)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize );\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1 )* portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const onPages = (pageNumber) => {\r\n        dispatch(setCurrentPage(pageNumber))\r\n        axios.get(`https://yts.mx/api/v2/list_movies.json?limit=10&page=${pageNumber}&movie_count=${totalCount}`)\r\n            .then(response => {\r\n                dispatch(setMovies(response.data.data.movies))\r\n\r\n            })\r\n    }\r\n    return (\r\n\r\n            <div>\r\n\r\n                {portionNumber > 1 && <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>Prev</button>}\r\n\r\n                {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p) => {return <span className={currentPage === p && 'pages'}\r\n                    onClick={(e) => {onPages(p)}}>{p}</span>})}\r\n                {portionCount  > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>Next</button>}\r\n            </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}