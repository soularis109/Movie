{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOUL\\\\Desktop\\\\tz\\\\second\\\\src\\\\components\\\\NavBar\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './pages.css';\nimport axios from \"axios\";\nimport { getPagination, setCurrentPage, setMovies, setTotalCount } from \"../redux/films-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const tolalCount = useSelector(state => state.movies.totalCount);\n  const pageSize = useSelector(state => state.movies.pageSize);\n  const currentPage = useSelector(state => state.movies.currentPage);\n  const pageCount = Math.ceil(tolalCount / pageSize);\n  const pages = [];\n\n  for (let i = 0; i <= pageCount; i++) {\n    pages.push(i + 1);\n  }\n\n  const onPages = pageNumber => {\n    dispatch(setCurrentPage(pageNumber));\n    axios.get(`https://yts.mx/api/v2/list_movies.json?limit=10&page=${pageNumber}&movie_count=${tolalCount}`).then(response => {\n      dispatch(setMovies(response.data.data.movies));\n      dispatch(setTotalCount(response.data.data.movie_count));\n      console.log(response.data.data.movie_count);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pages.map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === p && 'pages',\n        onClick: e => {\n          onPages(p);\n        },\n        children: p\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Pagination, \"RLfP6qRHv9qrpwL7tj0wwe0CNxE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/SOUL/Desktop/tz/second/src/components/NavBar/Pagination.jsx"],"names":["React","useEffect","useDispatch","useSelector","axios","getPagination","setCurrentPage","setMovies","setTotalCount","Pagination","dispatch","tolalCount","state","movies","totalCount","pageSize","currentPage","pageCount","Math","ceil","pages","i","push","onPages","pageNumber","get","then","response","data","movie_count","console","log","map","p","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,cAAvB,EAAuCC,SAAvC,EAAkDC,aAAlD,QAAsE,wBAAtE;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,UAAU,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,UAAvB,CAA9B;AACA,QAAMC,QAAQ,GAAGZ,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaE,QAAvB,CAA5B;AACA,QAAMC,WAAW,GAAGb,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaG,WAAvB,CAA/B;AAEA,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUR,UAAU,GAAGI,QAAvB,CAAlB;AACA,QAAMK,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,SAArB,EAAgCI,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAC,GAAG,CAAf;AACH;;AAED,QAAME,OAAO,GAAIC,UAAD,IAAgB;AAC5Bd,IAAAA,QAAQ,CAACJ,cAAc,CAACkB,UAAD,CAAf,CAAR;AACApB,IAAAA,KAAK,CAACqB,GAAN,CAAW,wDAAuDD,UAAW,gBAAeb,UAAW,EAAvG,EACKe,IADL,CACUC,QAAQ,IAAI;AACdjB,MAAAA,QAAQ,CAACH,SAAS,CAACoB,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBf,MAApB,CAAV,CAAR;AACAH,MAAAA,QAAQ,CAACF,aAAa,CAACmB,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,WAApB,CAAd,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,WAA/B;AACH,KALL;AAMH,GARD;;AASA,sBAEQ;AAAA,cACCT,KAAK,CAACY,GAAN,CAAUC,CAAC,IAAI;AACZ,0BAAO;AAAM,QAAA,SAAS,EAAEjB,WAAW,KAAKiB,CAAhB,IAAqB,OAAtC;AACP,QAAA,OAAO,EAAGC,CAAD,IAAO;AAACX,UAAAA,OAAO,CAACU,CAAD,CAAP;AAAW,SADrB;AAAA,kBACwBA;AADxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACyC,KAF5C;AADD;AAAA;AAAA;AAAA;AAAA,UAFR;AASH,CA/BD;;GAAMxB,U;UACeP,W,EACEC,W,EACFA,W,EACGA,W;;;KAJlBM,U;AAiCN,eAAeA,UAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './pages.css'\r\nimport axios from \"axios\";\r\nimport {getPagination, setCurrentPage, setMovies, setTotalCount} from \"../redux/films-reducer\";\r\nconst Pagination = () => {\r\n    const dispatch = useDispatch();\r\n    const tolalCount = useSelector(state => state.movies.totalCount);\r\n    const pageSize = useSelector(state => state.movies.pageSize);\r\n    const currentPage = useSelector(state => state.movies.currentPage);\r\n\r\n    const pageCount = Math.ceil(tolalCount / pageSize)\r\n    const pages = [];\r\n\r\n    for (let i = 0; i <= pageCount; i++) {\r\n        pages.push(i + 1)\r\n    }\r\n\r\n    const onPages = (pageNumber) => {\r\n        dispatch(setCurrentPage(pageNumber))\r\n        axios.get(`https://yts.mx/api/v2/list_movies.json?limit=10&page=${pageNumber}&movie_count=${tolalCount}`)\r\n            .then(response => {\r\n                dispatch(setMovies(response.data.data.movies))\r\n                dispatch(setTotalCount(response.data.data.movie_count))\r\n                console.log(response.data.data.movie_count)\r\n            })\r\n    }\r\n    return (\r\n\r\n            <div>\r\n            {pages.map(p => {\r\n                return <span className={currentPage === p && 'pages'}\r\n                onClick={(e) => {onPages(p)}}>{p}</span>})}\r\n            </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}