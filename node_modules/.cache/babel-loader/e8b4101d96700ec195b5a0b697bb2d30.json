{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOUL\\\\Desktop\\\\tz\\\\second\\\\src\\\\components\\\\NavBar\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './pages.css';\nimport axios from \"axios\";\nimport { getPagination, setCurrentPage, setMovies, setTotalCount } from \"../redux/films-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const totalCount = useSelector(state => state.movies.totalCount);\n  const pageSize = useSelector(state => state.movies.pageSize);\n  const currentPage = useSelector(state => state.movies.currentPage);\n  const pagesCount = Math.ceil(totalCount / pageSize);\n  const pages = [];\n\n  for (let i = 0; i <= pagesCount; i++) {\n    pages.push(i + 1);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  const onPages = pageNumber => {\n    dispatch(setCurrentPage(pageNumber));\n    axios.get(`https://yts.mx/api/v2/list_movies.json?limit=10&page=${pageNumber}&movie_count=${totalCount}`).then(response => {\n      dispatch(setMovies(response.data.data.movies));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pages.map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === p && 'pages',\n        onClick: e => {\n          onPages(p);\n        },\n        children: p\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Pagination, \"6TzEMri1zCqOC1aMy6UW3FJlu+s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/SOUL/Desktop/tz/second/src/components/NavBar/Pagination.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","axios","getPagination","setCurrentPage","setMovies","setTotalCount","Pagination","dispatch","totalCount","state","movies","pageSize","currentPage","pagesCount","Math","ceil","pages","i","push","portionCount","portionSize","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onPages","pageNumber","get","then","response","data","map","p","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,cAAvB,EAAuCC,SAAvC,EAAkDC,aAAlD,QAAsE,wBAAtE;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,UAAU,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,UAAvB,CAA9B;AACA,QAAMG,QAAQ,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,QAAvB,CAA5B;AACA,QAAMC,WAAW,GAAGZ,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaE,WAAvB,CAA/B;AAEA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGG,QAAvB,CAAnB;AACA,QAAMK,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAC,GAAG,CAAf;AACH;;AACD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGO,WAAvB,CAAnB;AACA,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIyB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBD,WAAtB,GAAoC,CAAhE;AACA,MAAII,sBAAsB,GAAGH,aAAa,GAAGD,WAA7C;;AAEA,QAAMK,OAAO,GAAIC,UAAD,IAAgB;AAC5BnB,IAAAA,QAAQ,CAACJ,cAAc,CAACuB,UAAD,CAAf,CAAR;AACAzB,IAAAA,KAAK,CAAC0B,GAAN,CAAW,wDAAuDD,UAAW,gBAAelB,UAAW,EAAvG,EACKoB,IADL,CACUC,QAAQ,IAAI;AACdtB,MAAAA,QAAQ,CAACH,SAAS,CAACyB,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBpB,MAApB,CAAV,CAAR;AAEH,KAJL;AAKH,GAPD;;AAQA,sBAEQ;AAAA,cACCM,KAAK,CAACe,GAAN,CAAUC,CAAC,IAAI;AACZ,0BAAO;AAAM,QAAA,SAAS,EAAEpB,WAAW,KAAKoB,CAAhB,IAAqB,OAAtC;AACP,QAAA,OAAO,EAAGC,CAAD,IAAO;AAACR,UAAAA,OAAO,CAACO,CAAD,CAAP;AAAW,SADrB;AAAA,kBACwBA;AADxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACyC,KAF5C;AADD;AAAA;AAAA;AAAA;AAAA,UAFR;AASH,CAlCD;;GAAM1B,U;UACeP,W,EACEC,W,EACFA,W,EACGA,W;;;KAJlBM,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './pages.css'\r\nimport axios from \"axios\";\r\nimport {getPagination, setCurrentPage, setMovies, setTotalCount} from \"../redux/films-reducer\";\r\nconst Pagination = () => {\r\n    const dispatch = useDispatch();\r\n    const totalCount = useSelector(state => state.movies.totalCount);\r\n    const pageSize = useSelector(state => state.movies.pageSize);\r\n    const currentPage = useSelector(state => state.movies.currentPage);\r\n\r\n    const pagesCount = Math.ceil(totalCount / pageSize)\r\n    const pages = [];\r\n\r\n    for (let i = 0; i <= pagesCount; i++) {\r\n        pages.push(i + 1)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize );\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1 )* portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n    \r\n    const onPages = (pageNumber) => {\r\n        dispatch(setCurrentPage(pageNumber))\r\n        axios.get(`https://yts.mx/api/v2/list_movies.json?limit=10&page=${pageNumber}&movie_count=${totalCount}`)\r\n            .then(response => {\r\n                dispatch(setMovies(response.data.data.movies))\r\n\r\n            })\r\n    }\r\n    return (\r\n\r\n            <div>\r\n            {pages.map(p => {\r\n                return <span className={currentPage === p && 'pages'}\r\n                onClick={(e) => {onPages(p)}}>{p}</span>})}\r\n            </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}